{"stats":{"totalMutantsCount":10,"killedCount":10,"notCoveredCount":0,"escapedCount":0,"errorCount":0,"skippedCount":0,"timeOutCount":0,"msi":1,"mutationCodeCoverage":0,"coveredCodeMsi":0},"escaped":null,"timeouted":null,"killed":[{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" - err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -14,7 +14,7 @@\n func executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n \tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n \tif err != nil {\n-\t\tpanic(\"Unable to parse template file: \" + err.Error())\n+\t\tpanic(\"Unable to parse template file: \" - err.Error())\n \t}\n \n \ttemplate := template.Must(parsedTemplate, err)\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.0\" with checksum 97c6c118e59f991afd4ea3e98f0e7b6f\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" - err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -21,7 +21,7 @@\n \n \treport, err := os.Create(outputReportFilePath)\n \tif err != nil {\n-\t\tpanic(\"Unable to create report file: \" + err.Error())\n+\t\tpanic(\"Unable to create report file: \" - err.Error())\n \t}\n \n \terr = template.Execute(report, data)\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.1\" with checksum dcd9151425595bd98740fef1c459bc2a\n"},{"mutator":{"mutatorName":"arithmetic/base","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" - err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -26,7 +26,7 @@\n \n \terr = template.Execute(report, data)\n \tif err != nil {\n-\t\tpanic(\"Error executing template: \" + err.Error())\n+\t\tpanic(\"Error executing template: \" - err.Error())\n \t}\n \texportReportsToJson(data)\n }\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.2\" with checksum 1eb155761a43a649379a7c81ccacd0fb\n"},{"mutator":{"mutatorName":"branch/if","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\t_ = err.Error\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -14,7 +14,7 @@\n func executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n \tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n \tif err != nil {\n-\t\tpanic(\"Unable to parse template file: \" + err.Error())\n+\t\t_ = err.Error\n \t}\n \n \ttemplate := template.Must(parsedTemplate, err)\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.3\" with checksum 03e882452b7ac3911f781fa308a82210\n"},{"mutator":{"mutatorName":"branch/if","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\t_ = err.Error\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -21,7 +21,7 @@\n \n \treport, err := os.Create(outputReportFilePath)\n \tif err != nil {\n-\t\tpanic(\"Unable to create report file: \" + err.Error())\n+\t\t_ = err.Error\n \t}\n \n \terr = template.Execute(report, data)\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.4\" with checksum 5342182e5ce6b7fa624751eba3d9095c\n"},{"mutator":{"mutatorName":"branch/if","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\t_ = err.Error\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -26,7 +26,7 @@\n \n \terr = template.Execute(report, data)\n \tif err != nil {\n-\t\tpanic(\"Error executing template: \" + err.Error())\n+\t\t_ = err.Error\n \t}\n \texportReportsToJson(data)\n }\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.5\" with checksum 553bc4bb486f75ea901dc8c17cd8d154\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\t_, _, _, _ = err, template.Execute, report, data\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -23,8 +23,7 @@\n \tif err != nil {\n \t\tpanic(\"Unable to create report file: \" + err.Error())\n \t}\n-\n-\terr = template.Execute(report, data)\n+\t_, _, _, _ = err, template.Execute, report, data\n \tif err != nil {\n \t\tpanic(\"Error executing template: \" + err.Error())\n \t}\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.6\" with checksum 2e3583e5f7a140ba4b1cb8f0f7cd5fc4\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\t_, _ = exportReportsToJson, data\n\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -28,7 +28,8 @@\n \tif err != nil {\n \t\tpanic(\"Error executing template: \" + err.Error())\n \t}\n-\texportReportsToJson(data)\n+\t_, _ = exportReportsToJson, data\n+\n }\n \n func main() {\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.7\" with checksum 7ee3c9e9f110bc6ec867ac921826b116\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\t_ = flag.Parse\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -36,7 +36,7 @@\n \t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n \ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n \treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n-\tflag.Parse()\n+\t_ = flag.Parse\n \n \tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n \t// data := readSingleJsonReportFile(*jsonFilePath)\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.11\" with checksum 68b3967b8d3fc8df64ccfe730be86055\n"},{"mutator":{"mutatorName":"statement/remove","originalSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t// data := readSingleJsonReportFile(*jsonFilePath)\n\texecuteTemplate(globalReport, *templatePath, *reportPath)\n}\n","mutatedSourceCode":"package main\n\nimport (\n\t\"embed\"\n\t\"flag\"\n\tmodels \"gomutestingrhtmlreport/models\"\n\t\"html/template\"\n\t\"os\"\n)\n\n//go:embed *.tmpl\nvar reportTmplFS embed.FS\n\nfunc executeTemplate(data models.Report, templatePath string, outputReportFilePath string) {\n\tparsedTemplate, err := template.ParseFS(reportTmplFS, templatePath)\n\tif err != nil {\n\t\tpanic(\"Unable to parse template file: \" + err.Error())\n\t}\n\n\ttemplate := template.Must(parsedTemplate, err)\n\n\treport, err := os.Create(outputReportFilePath)\n\tif err != nil {\n\t\tpanic(\"Unable to create report file: \" + err.Error())\n\t}\n\n\terr = template.Execute(report, data)\n\tif err != nil {\n\t\tpanic(\"Error executing template: \" + err.Error())\n\t}\n\texportReportsToJson(data)\n}\n\nfunc main() {\n\tglobalReportJsonFilePath := flag.String(\"global-report\", \"reports/reports-template.json\", \"Provide reports.json:: -global-report \u003cPATH_TO_GLOBAL_JSON_REPORTS\u003e\")\n\t// jsonFilePath := flag.String(\"report\", \"report.json\", \"Provide report.json:: -report \u003cPATH_TO_JSON_REPORT\u003e\")\n\ttemplatePath := flag.String(\"template\", \"report.tmpl\", \"Provide template path:: -template \u003cPATH_TO_TEMPLATE\u003e\")\n\treportPath := flag.String(\"out\", \"report.html\", \"Provide report output path:: -out \u003cPATH_TO_OUTPUT_HTML_REPORT\u003e\")\n\tflag.Parse()\n\n\tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n\t_, _,\n\t\t// data := readSingleJsonReportFile(*jsonFilePath)\n\t\t_ = globalReport, templatePath, reportPath\n\n}\n","originalFilePath":"go_mutesting_html_report.go","originalStartLine":0},"diff":"--- Original\n+++ New\n@@ -39,6 +39,8 @@\n \tflag.Parse()\n \n \tglobalReport := readGlobalJsonReportFile(*globalReportJsonFilePath)\n-\t// data := readSingleJsonReportFile(*jsonFilePath)\n-\texecuteTemplate(globalReport, *templatePath, *reportPath)\n+\t_, _,\n+\t\t// data := readSingleJsonReportFile(*jsonFilePath)\n+\t\t_ = globalReport, templatePath, reportPath\n+\n }\n","processOutput":"PASS \"/var/folders/y_/rcm9fbdn27d9plc8hdd5pttw0000gq/T/go-mutesting-2767929797/go_mutesting_html_report.go.12\" with checksum 9fb60de449d0682832d0b68a2e856bde\n"}],"errored":null}